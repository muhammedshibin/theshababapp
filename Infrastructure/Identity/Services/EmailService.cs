using Core.Enumerations;
using Core.Interfaces;
using Infrastructure.Helpers;
using Microsoft.Extensions.Options;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Mail;
using System.Text;
using System.Threading.Tasks;

namespace Infrastructure.Identity.Services
{
    public class EmailService : IEmailService
    {
        private readonly EmailSettings _emailSettings;

        public EmailService(IOptions<EmailSettings> emailSettings)
        {
            _emailSettings = emailSettings.Value;
        }
        public async Task SendEmailAsync(string recipientEmail, string subject, string message , string template = null)
        {
            if (string.IsNullOrEmpty(recipientEmail))
            {
                throw new Exception("Invalid Email Address");
            }

            string content = message;

            if (!string.IsNullOrEmpty(template))
            {
                if (template == MailTemplates.ForgotPassword)
                    content = string.Format(template, message);
                if (template == MailTemplates.ConfirmEmail)
                    content = template + message;
            }

            MailMessage mail = new MailMessage();
            mail.From = new MailAddress(_emailSettings.FromEmail,"Shabab-App");
            mail.To.Add(new MailAddress(recipientEmail));
            mail.Subject = subject;
            mail.IsBodyHtml = true;
            mail.Body = 
                $"<html>" +
                $"<body>" +
                $"{content}" +
                $"<br/>"+
                $"<div><p>From Shabab App<p></div><br/>" +
                $"<i>This is an Autogenerated Mail.Please Do not Reply</i></body></html>";
            mail.Priority = MailPriority.High;

            using SmtpClient smtp = new SmtpClient(_emailSettings.PrimaryDomain, _emailSettings.PrimaryPort);
            smtp.Credentials = new NetworkCredential(_emailSettings.UsernameEmail, _emailSettings.UsernamePassword);
            smtp.EnableSsl = true;
            await smtp.SendMailAsync(mail);

        }
    }
}
